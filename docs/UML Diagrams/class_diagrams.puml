@startuml VisionTrack Class Diagram

' Layout and styling
skinparam monochrome true
skinparam classFontSize 12
skinparam classFontStyle bold
skinparam packageStyle rectangle
skinparam defaultTextAlignment center
left to right direction

package "Core Processing" {
  class Detection <<YOLO>>
  class Tracker
}

package "Output Handling" {
  class AlertManager
  class VideoRecorder
}

class Config

' Class definitions
class Detection {
  -net
  -classes
  +loadModel(modelPath)
  +detect(frame): boxes
}

class Tracker {
  -tracks
  +update(boxes): tracks
  +getVelocity(id): velocity
}

class AlertManager {
  -alerts
  +checkAlerts(track)
}

class VideoRecorder {
  -writer
  +recordFrame(frame)
  +stopRecording()
}

class Config {
  -settings
  +loadConfig(path)
  +getSetting(key)
}

' Relationships
Detection --> Tracker : provides boxes
Tracker --> AlertManager : provides tracks
AlertManager --> VideoRecorder : triggers recording
Config --> Detection : configures
Config --> Tracker : configures
Config --> AlertManager : configures
Config --> VideoRecorder : configures

' Notes for clarity
note right of Detection
  Uses YOLOv8n ONNX for vehicle detection
end note

note right of Tracker
  Uses Hungarian Algorithm and Kalman filters
end note

@enduml
